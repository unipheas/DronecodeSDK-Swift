//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: mocap.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCall: ClientCallUnary {}

fileprivate final class Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCallBase: ClientCallUnaryBase<Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse>, Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCall {
  override class var method: String { return "/mavsdk.rpc.mocap.MocapService/SetVisionPositionEstimate" }
}

internal protocol Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCall: ClientCallUnary {}

fileprivate final class Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCallBase: ClientCallUnaryBase<Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse>, Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCall {
  override class var method: String { return "/mavsdk.rpc.mocap.MocapService/SetAttitudePositionMocap" }
}

internal protocol Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCall: ClientCallUnary {}

fileprivate final class Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCallBase: ClientCallUnaryBase<Mavsdk_Rpc_Mocap_SetOdometryRequest, Mavsdk_Rpc_Mocap_SetOdometryResponse>, Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCall {
  override class var method: String { return "/mavsdk.rpc.mocap.MocapService/SetOdometry" }
}


/// Instantiate Mavsdk_Rpc_Mocap_MocapServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Mavsdk_Rpc_Mocap_MocapServiceService: ServiceClient {
  /// Synchronous. Unary.
  func setVisionPositionEstimate(_ request: Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse
  /// Asynchronous. Unary.
  @discardableResult
  func setVisionPositionEstimate(_ request: Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCall

  /// Synchronous. Unary.
  func setAttitudePositionMocap(_ request: Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse
  /// Asynchronous. Unary.
  @discardableResult
  func setAttitudePositionMocap(_ request: Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCall

  /// Synchronous. Unary.
  func setOdometry(_ request: Mavsdk_Rpc_Mocap_SetOdometryRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Mocap_SetOdometryResponse
  /// Asynchronous. Unary.
  @discardableResult
  func setOdometry(_ request: Mavsdk_Rpc_Mocap_SetOdometryRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Mocap_SetOdometryResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCall

}

internal extension Mavsdk_Rpc_Mocap_MocapServiceService {
  /// Synchronous. Unary.
  func setVisionPositionEstimate(_ request: Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest) throws -> Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse {
    return try self.setVisionPositionEstimate(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func setVisionPositionEstimate(_ request: Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, completion: @escaping (Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCall {
    return try self.setVisionPositionEstimate(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func setAttitudePositionMocap(_ request: Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest) throws -> Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse {
    return try self.setAttitudePositionMocap(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func setAttitudePositionMocap(_ request: Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, completion: @escaping (Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCall {
    return try self.setAttitudePositionMocap(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func setOdometry(_ request: Mavsdk_Rpc_Mocap_SetOdometryRequest) throws -> Mavsdk_Rpc_Mocap_SetOdometryResponse {
    return try self.setOdometry(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func setOdometry(_ request: Mavsdk_Rpc_Mocap_SetOdometryRequest, completion: @escaping (Mavsdk_Rpc_Mocap_SetOdometryResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCall {
    return try self.setOdometry(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Mavsdk_Rpc_Mocap_MocapServiceServiceClient: ServiceClientBase, Mavsdk_Rpc_Mocap_MocapServiceService {
  /// Synchronous. Unary.
  internal func setVisionPositionEstimate(_ request: Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse {
    return try Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func setVisionPositionEstimate(_ request: Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCall {
    return try Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func setAttitudePositionMocap(_ request: Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse {
    return try Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func setAttitudePositionMocap(_ request: Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCall {
    return try Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func setOdometry(_ request: Mavsdk_Rpc_Mocap_SetOdometryRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Mocap_SetOdometryResponse {
    return try Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func setOdometry(_ request: Mavsdk_Rpc_Mocap_SetOdometryRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Mocap_SetOdometryResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCall {
    return try Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

class Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCallTestStub: ClientCallUnaryTestStub, Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCall {
  override class var method: String { return "/mavsdk.rpc.mocap.MocapService/SetVisionPositionEstimate" }
}

class Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCallTestStub: ClientCallUnaryTestStub, Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCall {
  override class var method: String { return "/mavsdk.rpc.mocap.MocapService/SetAttitudePositionMocap" }
}

class Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCallTestStub: ClientCallUnaryTestStub, Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCall {
  override class var method: String { return "/mavsdk.rpc.mocap.MocapService/SetOdometry" }
}

class Mavsdk_Rpc_Mocap_MocapServiceServiceTestStub: ServiceClientTestStubBase, Mavsdk_Rpc_Mocap_MocapServiceService {
  var setVisionPositionEstimateRequests: [Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest] = []
  var setVisionPositionEstimateResponses: [Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse] = []
  func setVisionPositionEstimate(_ request: Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse {
    setVisionPositionEstimateRequests.append(request)
    defer { setVisionPositionEstimateResponses.removeFirst() }
    return setVisionPositionEstimateResponses.first!
  }
  @discardableResult
  func setVisionPositionEstimate(_ request: Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCall {
    let response = try self.setVisionPositionEstimate(request)
    let callResult = CallResult(success: true, statusCode: .ok, statusMessage: "OK", resultData: nil, initialMetadata: nil, trailingMetadata: nil)
    completion(response, callResult)
    return Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateCallTestStub()
  }

  var setAttitudePositionMocapRequests: [Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest] = []
  var setAttitudePositionMocapResponses: [Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse] = []
  func setAttitudePositionMocap(_ request: Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse {
    setAttitudePositionMocapRequests.append(request)
    defer { setAttitudePositionMocapResponses.removeFirst() }
    return setAttitudePositionMocapResponses.first!
  }
  @discardableResult
  func setAttitudePositionMocap(_ request: Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCall {
    let response = try self.setAttitudePositionMocap(request)
    let callResult = CallResult(success: true, statusCode: .ok, statusMessage: "OK", resultData: nil, initialMetadata: nil, trailingMetadata: nil)
    completion(response, callResult)
    return Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapCallTestStub()
  }

  var setOdometryRequests: [Mavsdk_Rpc_Mocap_SetOdometryRequest] = []
  var setOdometryResponses: [Mavsdk_Rpc_Mocap_SetOdometryResponse] = []
  func setOdometry(_ request: Mavsdk_Rpc_Mocap_SetOdometryRequest, metadata customMetadata: Metadata) throws -> Mavsdk_Rpc_Mocap_SetOdometryResponse {
    setOdometryRequests.append(request)
    defer { setOdometryResponses.removeFirst() }
    return setOdometryResponses.first!
  }
  @discardableResult
  func setOdometry(_ request: Mavsdk_Rpc_Mocap_SetOdometryRequest, metadata customMetadata: Metadata, completion: @escaping (Mavsdk_Rpc_Mocap_SetOdometryResponse?, CallResult) -> Void) throws -> Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCall {
    let response = try self.setOdometry(request)
    let callResult = CallResult(success: true, statusCode: .ok, statusMessage: "OK", resultData: nil, initialMetadata: nil, trailingMetadata: nil)
    completion(response, callResult)
    return Mavsdk_Rpc_Mocap_MocapServiceSetOdometryCallTestStub()
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Mavsdk_Rpc_Mocap_MocapServiceProvider: ServiceProvider {
  func setVisionPositionEstimate(request: Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, session: Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateSession) throws -> Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse
  func setAttitudePositionMocap(request: Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, session: Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapSession) throws -> Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse
  func setOdometry(request: Mavsdk_Rpc_Mocap_SetOdometryRequest, session: Mavsdk_Rpc_Mocap_MocapServiceSetOdometrySession) throws -> Mavsdk_Rpc_Mocap_SetOdometryResponse
}

extension Mavsdk_Rpc_Mocap_MocapServiceProvider {
  internal var serviceName: String { return "mavsdk.rpc.mocap.MocapService" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/mavsdk.rpc.mocap.MocapService/SetVisionPositionEstimate":
      return try Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateSessionBase(
        handler: handler,
        providerBlock: { try self.setVisionPositionEstimate(request: $0, session: $1 as! Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateSessionBase) })
          .run()
    case "/mavsdk.rpc.mocap.MocapService/SetAttitudePositionMocap":
      return try Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapSessionBase(
        handler: handler,
        providerBlock: { try self.setAttitudePositionMocap(request: $0, session: $1 as! Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapSessionBase) })
          .run()
    case "/mavsdk.rpc.mocap.MocapService/SetOdometry":
      return try Mavsdk_Rpc_Mocap_MocapServiceSetOdometrySessionBase(
        handler: handler,
        providerBlock: { try self.setOdometry(request: $0, session: $1 as! Mavsdk_Rpc_Mocap_MocapServiceSetOdometrySessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateSession: ServerSessionUnary {}

fileprivate final class Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateSessionBase: ServerSessionUnaryBase<Mavsdk_Rpc_Mocap_SetVisionPositionEstimateRequest, Mavsdk_Rpc_Mocap_SetVisionPositionEstimateResponse>, Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateSession {}

class Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateSessionTestStub: ServerSessionUnaryTestStub, Mavsdk_Rpc_Mocap_MocapServiceSetVisionPositionEstimateSession {}

internal protocol Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapSession: ServerSessionUnary {}

fileprivate final class Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapSessionBase: ServerSessionUnaryBase<Mavsdk_Rpc_Mocap_SetAttitudePositionMocapRequest, Mavsdk_Rpc_Mocap_SetAttitudePositionMocapResponse>, Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapSession {}

class Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapSessionTestStub: ServerSessionUnaryTestStub, Mavsdk_Rpc_Mocap_MocapServiceSetAttitudePositionMocapSession {}

internal protocol Mavsdk_Rpc_Mocap_MocapServiceSetOdometrySession: ServerSessionUnary {}

fileprivate final class Mavsdk_Rpc_Mocap_MocapServiceSetOdometrySessionBase: ServerSessionUnaryBase<Mavsdk_Rpc_Mocap_SetOdometryRequest, Mavsdk_Rpc_Mocap_SetOdometryResponse>, Mavsdk_Rpc_Mocap_MocapServiceSetOdometrySession {}

class Mavsdk_Rpc_Mocap_MocapServiceSetOdometrySessionTestStub: ServerSessionUnaryTestStub, Mavsdk_Rpc_Mocap_MocapServiceSetOdometrySession {}

